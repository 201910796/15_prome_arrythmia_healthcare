// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  male
  female
}

model User {
  user_id       Int     @id @default(autoincrement())
  id            String  @unique
  password      String
  name          String?
  age           Int?
  gender        Gender?
  phone         String?
  refresh_token String?

  chat_rooms ChatRoom[]
  diagnosis  Diagnosis[]
  hospitals  Hospital[]

  @@map("user") // 실제 테이블 이름 'user'와 매핑
}

model ChatRoom {
  chat_id    Int      @id @default(autoincrement())
  user_id    Int
  title      String?
  created_at DateTime @default(now())

  user     User          @relation(fields: [user_id], references: [user_id])
  comments ChatComment[]

  @@map("chat_rooms")
}

model ChatComment {
  content_id   Int      @id @default(autoincrement())
  chat_id      Int
  is_question  Boolean
  content      String
  is_recommend Boolean? @default(false) // AI 응답이 병원 추천인지 여부
  is_diag      Boolean? @default(false) // AI 응답이 진단 관련인지 여부
  created_at   DateTime @default(now())

  chat_room ChatRoom @relation(fields: [chat_id], references: [chat_id])

  @@map("chat_comments")
}

model Hospital {
  hospital_id   Int     @id @default(autoincrement())
  user_id       Int
  hospital_name String?
  distance      Float?
  address       String
  score         Int?

  user         User          @relation(fields: [user_id], references: [user_id])
  reservations Reservation[]
  calendars    Calendar[]

  @@map("hospital") // 실제 테이블 이름 'hospital'과 매핑
}

model Reservation {
  reservation_id   Int      @id @default(autoincrement())
  hospital_id      Int
  reservation_date DateTime

  hospital Hospital @relation(fields: [hospital_id], references: [hospital_id])

  @@map("reservation") // 실제 테이블 이름 'reservation'과 매핑
}

model Calendar {
  calendar_id   Int      @id @default(autoincrement())
  hospital_id   Int
  hospital_date DateTime

  hospital Hospital @relation(fields: [hospital_id], references: [hospital_id])

  @@map("calendar") // 실제 테이블 이름 'calendar'과 매핑
}

// model Description {
//   // Not used in DB, stored in files
// }

model Diagnosis {
  diagnosis_id Int      @id @default(autoincrement())
  user_id      Int
  result       String
  created_at   DateTime @default(now())

  user User @relation(fields: [user_id], references: [user_id])

  @@map("diagnosis")
}
